import{_ as a}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as t,e as n,o as i}from"./app-DkRYbnGQ.js";const r={};function o(p,e){return i(),t("div",null,e[0]||(e[0]=[n('<h1 id="服务端渲染" tabindex="-1"><a class="header-anchor" href="#服务端渲染"><span>服务端渲染</span></a></h1><div class="hint-container tip"><p class="hint-container-title">提示</p><p>在默认情况下Vue 的职责是在浏览器中生成和操作DOM。Vue也支持将组件在服务器端直接渲染成HTML 字符串，作为服务端响应返回给浏览器，最后在浏览器端将静态的HTML ‘激活’为能够交互的客户端应用。</p></div><h2 id="优点" tabindex="-1"><a class="header-anchor" href="#优点"><span>优点</span></a></h2><ol><li>更快的首屏加载</li><li>统一的心智模型</li><li>更好的SEO</li></ol><h3 id="首屏加载" tabindex="-1"><a class="header-anchor" href="#首屏加载"><span>首屏加载</span></a></h3><p>这一点在慢网速或者运行缓慢的设备上比较重要，渲染的HTML 无需等待JavaScript的下载和执行，用户是可以更快的看到完整的渲染页面。除此之外，获取数据的首次访问也在服务端完成，这样就会有更快 的数据反应</p><h3 id="心智模型" tabindex="-1"><a class="header-anchor" href="#心智模型"><span>心智模型</span></a></h3><p>你可以使用相同的语言以及相同的声明式、面相组件的心智模型来开发整个应用，而不需要在后端模版系统和前端框架之间来回切换。</p><h3 id="seo" tabindex="-1"><a class="header-anchor" href="#seo"><span>SEO</span></a></h3><p>搜索爬虫可以直接看到完全渲染的页面</p><h2 id="缺点" tabindex="-1"><a class="header-anchor" href="#缺点"><span>缺点</span></a></h2><ol><li>开发存在限制</li><li>Node环境</li><li>服务端负载</li></ol><h3 id="开发限制" tabindex="-1"><a class="header-anchor" href="#开发限制"><span>开发限制</span></a></h3><p>浏览器特定的代码只能在某些生命周期钩子中使用，一些外部库可能需要特殊处理凯能在服务端渲染的应用中运行</p><h3 id="node-环境" tabindex="-1"><a class="header-anchor" href="#node-环境"><span>Node 环境</span></a></h3><p>更多的与构件配置和部署相关的要求。服务端渲染的应用需要一个能让Node.js 服务器运行的环境，不像完全静态的SPA那样可以直接部署在任意的静态文件服务器上。</p><h3 id="服务端负载" tabindex="-1"><a class="header-anchor" href="#服务端负载"><span>服务端负载</span></a></h3><p>在Node.JS 中渲染一个完整的应用要比仅仅托管静态文件更加占用CPU资源</p>',18)]))}const c=a(r,[["render",o]]),l=JSON.parse('{"path":"/learn/Vue3/2.html","title":"服务端渲染","lang":"zh-CN","frontmatter":{"icon":"akar-icons:file","date":"2025-03-13T00:00:00.000Z","order":2,"category":["Vue3"],"description":"服务端渲染 提示 在默认情况下Vue 的职责是在浏览器中生成和操作DOM。Vue也支持将组件在服务器端直接渲染成HTML 字符串，作为服务端响应返回给浏览器，最后在浏览器端将静态的HTML ‘激活’为能够交互的客户端应用。 优点 更快的首屏加载 统一的心智模型 更好的SEO 首屏加载 这一点在慢网速或者运行缓慢的设备上比较重要，渲染的HTML 无需等待...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"服务端渲染\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2025-03-13T00:00:00.000Z\\",\\"dateModified\\":\\"2025-08-19T09:00:39.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Mr shen\\",\\"url\\":\\"https://mister-hope.com\\"}]}"],["meta",{"property":"og:url","content":"https://mister-hope.github.io/CrazyBlob/learn/Vue3/2.html"}],["meta",{"property":"og:site_name","content":"CrazyKaiSa"}],["meta",{"property":"og:title","content":"服务端渲染"}],["meta",{"property":"og:description","content":"服务端渲染 提示 在默认情况下Vue 的职责是在浏览器中生成和操作DOM。Vue也支持将组件在服务器端直接渲染成HTML 字符串，作为服务端响应返回给浏览器，最后在浏览器端将静态的HTML ‘激活’为能够交互的客户端应用。 优点 更快的首屏加载 统一的心智模型 更好的SEO 首屏加载 这一点在慢网速或者运行缓慢的设备上比较重要，渲染的HTML 无需等待..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-08-19T09:00:39.000Z"}],["meta",{"property":"article:published_time","content":"2025-03-13T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2025-08-19T09:00:39.000Z"}]]},"git":{"createdTime":1755594039000,"updatedTime":1755594039000,"contributors":[{"name":"Shenxinjie","username":"Shenxinjie","email":"1574650522@qq.com","commits":1,"url":"https://github.com/Shenxinjie"}]},"readingTime":{"minutes":1.55,"words":465},"filePathRelative":"learn/Vue3/2.md","excerpt":"\\n<div class=\\"hint-container tip\\">\\n<p class=\\"hint-container-title\\">提示</p>\\n<p>在默认情况下Vue 的职责是在浏览器中生成和操作DOM。Vue也支持将组件在服务器端直接渲染成HTML 字符串，作为服务端响应返回给浏览器，最后在浏览器端将静态的HTML ‘激活’为能够交互的客户端应用。</p>\\n</div>\\n<h2>优点</h2>\\n<ol>\\n<li>更快的首屏加载</li>\\n<li>统一的心智模型</li>\\n<li>更好的SEO</li>\\n</ol>\\n<h3>首屏加载</h3>\\n<p>这一点在慢网速或者运行缓慢的设备上比较重要，渲染的HTML 无需等待JavaScript的下载和执行，用户是可以更快的看到完整的渲染页面。除此之外，获取数据的首次访问也在服务端完成，这样就会有更快 的数据反应</p>","autoDesc":true}');export{c as comp,l as data};
